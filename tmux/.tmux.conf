# Reload config with Ctrl+r
bind-key r source-file ~/.tmux.conf \; display-message "Updated config reloaded!!"

# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-s
bind -r C-s send-prefix # -r avoids having to repeat C-s twice

# Configure your default shell, Zsh in my case.
set -g default-shell $SHELL

# Override the default command to use `reattach-to-user-namespace` for everything.
#set -g default-command "reattach-to-user-namespace -l ${SHELL}"

# Vim style navigation in copy mode
# Make sure to `brew install reattach-to-user-namespace`
setw -g mode-keys vi
set -g mouse on
set -s set-clipboard off

# Select using 'v'
bind-key -T copy-mode-vi v send-keys -X begin-selection

# Select using Space
unbind-key -T copy-mode-vi Space
bind-key -T copy-mode-vi Space send-keys -X begin-selection

# Select using mouse
unbind-key -T copy-mode MouseDragEnd1Pane
bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel "pbcopy"

# Copy using 'y'
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"

# Copy using Enter
unbind-key -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"

# Paste using prefix ]
bind ] run "pbpaste | tmux load-buffer - && tmux paste-buffer"

# Split / join panes
bind "\\" split-window -h -c '#{pane_current_path}'
bind "_" split-window -v -c '#{pane_current_path}'
bind c new-window -c '#{pane_current_path}'
bind-key j split-window -h \; choose-window 'kill-pane ; join-pane -s %%'
bind-key b split-window -h \; choose-window 'kill-pane ; join-pane -t %%'
unbind '"'
unbind %

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\\ if-shell "$is_vim" "send-keys 'C-\\'" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\\ select-pane -l

bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Up resize-pane -U 5
bind -n C-Down resize-pane -D 5

bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Up resize-pane -U 1
bind -n S-Down resize-pane -D 1

# improve colors
set-option -g default-terminal "xterm-256color"

# Set length of char in status bar left
set-option -g status-left-length 80

# Change status bar color from harsh green to pink
set-option -g status-bg '#eee8d5'
set-option -g status-fg '#586e75'

# Show session name in the status left, empty status right
set -g status-left ' '
set -g status-right '#[fg=#eee8d5,bg=#839496] %d/%m #[bg=#586e75] %H:%M:%S '

setw -g window-status-current-format '#[fg=#eee8d5,bg=#d33682] #I: #W '
setw -g window-status-format ' #W '

# Set scrollback buffer size
set -g history-limit 500000

# Use prefix C-l to clear the visible scrollback lines
bind C-l send-keys 'C-l'

# Use prefix C-k to clear the scrolled off (hidden) buffer lines
bind C-k clear-history
bind C-k send-keys -R \; clear-history

# Neovim optimized builds
set-option -sg escape-time 10
